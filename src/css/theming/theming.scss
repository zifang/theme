@import 'palette';
// For a given in a palette, return the contrast color from the map of contrast palettes;
@function jr-contrast($palette, $hue) {
    @return map-get(map-get($palette, contrast), $hue);
}

// Creates a map of hues to colors for a theme. This is used to define a theme palette in terms
@function jr-palette($base-palette, $default: 500, $lighter: 100, $darker: 700, $text: $default) {
    $result: map-merge($base-palette, ( 
        default: map-get($base-palette, $default), 
        lighter: map-get($base-palette, $lighter), 
        darker: map-get($base-palette, $darker), 
        text: map-get($base-palette, $text), 
        default-contrast: jr-contrast($base-palette, $default), 
        lighter-contrast: jr-contrast($base-palette, $lighter), 
        darker-contrast: jr-contrast($base-palette, $darker)
    ));
    // For each hue in the palette, add a "-contrast" color to the map.
    @each $hue,
    $color in $base-palette {
        $result: map-merge($result, ( '#{$hue}-contrast': jr-contrast($base-palette, $hue)))
    }
    @return $result;
}

// @param $opacity The alpha channel value for the color.
@function jr-color($palette, $hue: default, $opacity: null) {
    @if type-of($hue)==number and $hue>=0 and $hue <=1 {
        @return jr-color($palette, default, $hue);
    }
    $color: map-get($palette, $hue);
    @if (type-of($color) !=color) {
        @return $color;
    }
    @return rgba($color, if($opacity == null, opacity($color), $opacity));
}

// Creates a container object for a light theme to be given to individual component theme mixins.
@function jr-light-theme($primary, $warn: jr-palette($jr-red)) {
    @return ( 
        primary: $primary, 
        warn: $warn, 
        is-dark: false, 
        foreground: $jr-light-theme-foreground, 
        background: $jr-light-theme-background, 
    );
}

// Creates a container object for a dark theme to be given to individual component theme mixins.
@function jr-dark-theme($primary, $warn: jr-palette($jr-red)) {
    @return ( 
        primary: $primary, 
        warn: $warn, 
        is-dark: true, 
        foreground: $jr-dark-theme-foreground, 
        background: $jr-dark-theme-background, 
    );
}